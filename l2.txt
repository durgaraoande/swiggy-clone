#Bundler --> which gives functionlaities
ex: webpack, parcel, vite

create-react-app uses bundler it uses webpack.

we need to install parcel to our machine using npm

#cmd: npm init -y
-y skips a lot of configuration

package.json file adds to our machine

we use npm because it powered by a lot of things/packages and to use in our app we use npm

to install parcel we use 
cmd: npm install -D parcel
-D means we dont want parcel in production so for development we use -D
-D => --save-dev are same
D means devDependency

package-lock.json file adds to our machine 

to install react in production and development we use command
#cmd: npm install react  (or)
npm i react
and for react-dom
npm i react-dom

To ignite our appp


#cmd: npx parcel index.html

npx means execute using npm


we are importing react and react-dom from node-modules

when we run the server it gives the error because it reads tye js file as normal file
to overcome this we use type="module" in script tag to tell the browser as it is a react file

import statements are

import React from 'react';
import ReactDOM from 'react-dom/client';

the live server will reload automatically if we save the file because of 
HMR -- Hot Module Reload
File watcher algorithm


#parcel doing things:
live reloading server
Bundling
minify the files
cleaning the code
dev and production Build
image optimization
caching while development
compatible with older browsers
HTTPS on dev
manage port numbers
consistant hasing algorithms


**we should put .parcel-cache in .git-ignore
Everything we get in server we put in git-ignore



<!-- <script crossorigin src="https://unpkg.com/react@18/umd/react.development.js"></script>
<script crossorigin src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
<script>
    const heading=React.createElement("h1",{},"Hello Everyone!");
    const root= ReactDOM.createRoot(document.getElementById("root"));
    console.log(root);
    //passing react element inside the root
    root.render(heading);
</script>

<script>
    //heading=document.createElement("h1");
    //heading.innerHTML="hello everyone!";
    //root=document.getElementById("root");
    //root.appendChild(heading);
</script> -->